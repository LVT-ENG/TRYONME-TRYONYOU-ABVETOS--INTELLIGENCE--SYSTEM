TRYONYOU RETRODEPLOY SYSTEM - ARCHITECTURE OVERVIEW
═══════════════════════════════════════════════════════════════════════════════

┌─────────────────────────────────────────────────────────────────────────────┐
│                        RETRODEPLOY SYSTEM ARCHITECTURE                       │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│  INPUT: TRYONYOU_DEPLOY_EXPRESS_INBOX/                                      │
│  ┌────────────────────────────────────────────────────────────────┐         │
│  │  • TRYONYOU_DEPLOY_EXPRESS_20251020_0737.zip                   │         │
│  │  • TRYONYOU_DEPLOY_EXPRESS_20251020_0930.zip                   │         │
│  │  • ... (up to 48 ZIPs)                                         │         │
│  └────────────────────────────────────────────────────────────────┘         │
└─────────────────────────────────────────────────────────────────────────────┘
                                      │
                                      ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│  MONITORING: watcher.js (Node.js Daemon)                                    │
│  ┌────────────────────────────────────────────────────────────────┐         │
│  │  • Scans INBOX every 30 seconds                                │         │
│  │  • Detects new/changed ZIP files                               │         │
│  │  • Triggers deployment pipeline                                │         │
│  │  • Logs all activities to retrodeploy.log                      │         │
│  └────────────────────────────────────────────────────────────────┘         │
└─────────────────────────────────────────────────────────────────────────────┘
                                      │
                                      ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│  PROCESSING: deploy.sh (Bash Script)                                        │
│  ┌────────────────────────────────────────────────────────────────┐         │
│  │                                                                 │         │
│  │  STEP 1: Detect ZIPs                                           │         │
│  │  ├─ Count ZIP files in INBOX                                   │         │
│  │  └─ Log findings                                               │         │
│  │                                                                 │         │
│  │  STEP 2: Clean Duplicates                                      │         │
│  │  ├─ Group by base name                                         │         │
│  │  ├─ Compare modification times                                 │         │
│  │  ├─ Keep newest version                                        │         │
│  │  └─ Remove older duplicates                                    │         │
│  │                                                                 │         │
│  │  STEP 3: Git Commit                                            │         │
│  │  ├─ git checkout main                                          │         │
│  │  ├─ git add .                                                  │         │
│  │  ├─ git commit -m "🚀 Retrodeploy: ..."                       │         │
│  │  └─ git push origin main                                       │         │
│  │                                                                 │         │
│  │  STEP 4: Build with Vite                                       │         │
│  │  ├─ npm install (if needed)                                    │         │
│  │  └─ npm run build (Vite 7.1.2)                                │         │
│  │                                                                 │         │
│  │  STEP 5: Deploy to Vercel                                      │         │
│  │  └─ vercel --prod --token $VERCEL_TOKEN --yes                 │         │
│  │                                                                 │         │
│  │  STEP 6: Verify & Notify                                       │         │
│  │  ├─ curl https://tryonyou.app (check HTTP 200)                │         │
│  │  └─ Send Telegram notification to @abvet_deploy_bot           │         │
│  │                                                                 │         │
│  └────────────────────────────────────────────────────────────────┘         │
└─────────────────────────────────────────────────────────────────────────────┘
                                      │
                                      ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│  AUTOMATION: makefile (Make Targets)                                        │
│  ┌────────────────────────────────────────────────────────────────┐         │
│  │  • make install   → npm install                                │         │
│  │  • make build     → npm run build                              │         │
│  │  • make commit    → git commit & push                          │         │
│  │  • make deploy    → vercel --prod                              │         │
│  │  • make all       → Full pipeline                              │         │
│  │  • make verify    → Check HTTP 200                             │         │
│  │  • make status    → Git status                                 │         │
│  │  • make clean     → Remove build artifacts                     │         │
│  └────────────────────────────────────────────────────────────────┘         │
└─────────────────────────────────────────────────────────────────────────────┘
                                      │
                                      ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│  BUILD: Vite 7.1.2                                                          │
│  ┌────────────────────────────────────────────────────────────────┐         │
│  │  • Processes React components                                  │         │
│  │  • Bundles JavaScript & CSS                                    │         │
│  │  • Optimizes images                                            │         │
│  │  • Generates production build in /dist                         │         │
│  └────────────────────────────────────────────────────────────────┘         │
└─────────────────────────────────────────────────────────────────────────────┘
                                      │
                                      ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│  DEPLOYMENT: Vercel                                                         │
│  ┌────────────────────────────────────────────────────────────────┐         │
│  │  Configuration: vercel.json                                    │         │
│  │  ├─ Framework: vite                                            │         │
│  │  ├─ Build: npm run build                                       │         │
│  │  ├─ Output: dist/                                              │         │
│  │  ├─ Domain: tryonyou.app                                       │         │
│  │  └─ Environment: production                                    │         │
│  └────────────────────────────────────────────────────────────────┘         │
└─────────────────────────────────────────────────────────────────────────────┘
                                      │
                                      ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│  OUTPUT: https://tryonyou.app                                               │
│  ┌────────────────────────────────────────────────────────────────┐         │
│  │  ✅ Live production website                                    │         │
│  │  ✅ HTTP 200 OK                                                │         │
│  │  ✅ CDN-optimized assets                                       │         │
│  │  ✅ SSL/HTTPS enabled                                          │         │
│  └────────────────────────────────────────────────────────────────┘         │
└─────────────────────────────────────────────────────────────────────────────┘
                                      │
                                      ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│  NOTIFICATION: Telegram Bot (@abvet_deploy_bot)                             │
│  ┌────────────────────────────────────────────────────────────────┐         │
│  │  ✅ Deployment Complete!                                       │         │
│  │  📦 Deployed: 48 ZIPs                                          │         │
│  │  🕐 Time: 2025-10-20 07:32:00                                  │         │
│  │  🌍 URL: https://tryonyou.app                                  │         │
│  │  📝 Commit: 🚀 Retrodeploy: Mass deployment...                │         │
│  └────────────────────────────────────────────────────────────────┘         │
└─────────────────────────────────────────────────────────────────────────────┘
                                      │
                                      ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│  LOGGING: retrodeploy.log                                                   │
│  ┌────────────────────────────────────────────────────────────────┐         │
│  │  [2025-10-20T07:32:00.000Z] [INFO] 1️⃣ Detecting ZIPs...      │         │
│  │  [2025-10-20T07:32:01.000Z] [INFO] Found 48 ZIP files         │         │
│  │  [2025-10-20T07:32:02.000Z] [INFO] 2️⃣ Cleaning duplicates...  │         │
│  │  [2025-10-20T07:32:05.000Z] [INFO] Cleaned 5 duplicate files  │         │
│  │  [2025-10-20T07:32:06.000Z] [INFO] 3️⃣ Committing to main...   │         │
│  │  [2025-10-20T07:32:10.000Z] [SUCCESS] Pushed to GitHub        │         │
│  │  [2025-10-20T07:33:00.000Z] [INFO] 4️⃣ Building with Vite...   │         │
│  │  [2025-10-20T07:34:00.000Z] [SUCCESS] Build completed         │         │
│  │  [2025-10-20T07:34:01.000Z] [INFO] 5️⃣ Deploying to Vercel...  │         │
│  │  [2025-10-20T07:35:00.000Z] [SUCCESS] Deployed to production  │         │
│  │  [2025-10-20T07:35:01.000Z] [INFO] 6️⃣ Verifying deployment... │         │
│  │  [2025-10-20T07:35:02.000Z] [SUCCESS] HTTP 200 OK             │         │
│  │  [2025-10-20T07:35:03.000Z] [SUCCESS] Notification sent       │         │
│  └────────────────────────────────────────────────────────────────┘         │
└─────────────────────────────────────────────────────────────────────────────┘

═══════════════════════════════════════════════════════════════════════════════

FILE STRUCTURE & RESPONSIBILITIES
──────────────────────────────────

📁 /retrodeploy/
├── deploy.sh              Master orchestration script (Bash)
├── watcher.js             File monitoring daemon (Node.js)
├── makefile               Task automation (Make)
├── vercel.json            Vercel deployment config (JSON)
├── .env                   Environment variables (NOT in git)
├── .env.example           Template for .env (IN git)
├── .gitignore             Ignore sensitive files
├── retrodeploy.log        Continuous activity log
├── README.txt             User instructions (TXT)
├── DOCUMENTATION.md       Complete documentation (Markdown)
├── EXAMPLES.sh            Usage examples script (Bash)
└── ARCHITECTURE.txt       This file (TXT)

📁 /TRYONYOU_DEPLOY_EXPRESS_INBOX/
├── README.md              INBOX usage guide
└── *.zip                  Deployment packages (NOT in git)

═══════════════════════════════════════════════════════════════════════════════

DATA FLOW DIAGRAM
─────────────────

User adds ZIP → Watcher detects → deploy.sh runs → 
  → Cleanup duplicates → Git commit → Vite build → 
  → Vercel deploy → Verify site → Send notification → Log results

═══════════════════════════════════════════════════════════════════════════════

SECURITY CONSIDERATIONS
───────────────────────

🔒 Sensitive Data Protection:
   • .env file NOT committed to git (.gitignore blocks it)
   • Tokens stored in environment variables
   • Use .env.example as safe template

🔒 Access Control:
   • VERCEL_TOKEN required for deployment
   • TELEGRAM_BOT_TOKEN for notifications
   • File permissions: chmod 600 .env

🔒 Best Practices:
   • Rotate tokens periodically
   • Use Vercel environment variables for production
   • Monitor retrodeploy.log for suspicious activity
   • Review commit history regularly

═══════════════════════════════════════════════════════════════════════════════

SCALABILITY & PERFORMANCE
──────────────────────────

📈 Current Capacity:
   • Up to 48 ZIP files
   • 30-second monitoring interval
   • Automatic duplicate cleanup
   • Parallel processing where possible

📈 Optimization Points:
   • Vite build caching
   • Vercel CDN edge caching
   • Incremental builds
   • Asset optimization (images, fonts)

📈 Future Enhancements:
   • Parallel ZIP processing
   • Enhanced deduplication algorithm
   • Real-time WebSocket notifications
   • Dashboard for monitoring

═══════════════════════════════════════════════════════════════════════════════

TROUBLESHOOTING FLOWCHART
──────────────────────────

Deployment fails?
│
├─ Check retrodeploy.log for errors
├─ Verify VERCEL_TOKEN is set in .env
├─ Ensure npm dependencies are installed
├─ Check GitHub push permissions
├─ Verify Vercel project configuration
└─ Test with: make verify

Watcher not detecting?
│
├─ Check if watcher.js is running (ps aux | grep watcher)
├─ Verify INBOX directory permissions
├─ Check retrodeploy.log for watcher logs
├─ Ensure ZIP files have correct naming format
└─ Test manually: ./deploy.sh

Build fails?
│
├─ Run: npm install
├─ Check Node.js version (>=16)
├─ Verify Vite configuration
├─ Review build errors in console
└─ Clean and rebuild: make clean && make build

═══════════════════════════════════════════════════════════════════════════════

Version: 1.0.0
Created: 2025-10-20
Maintained by: LVT-ENG
System: TRYONYOU Intelligence System

═══════════════════════════════════════════════════════════════════════════════
