╔═══════════════════════════════════════════════════════════════════════════════╗
║                   TRYONYOU RETRODEPLOY - QUICK REFERENCE                      ║
╚═══════════════════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────────────────┐
│ 🚀 QUICK START                                                               │
└─────────────────────────────────────────────────────────────────────────────┘

1️⃣  Setup:    cd retrodeploy && cp .env.example .env && nano .env
2️⃣  Install:  make install
3️⃣  Build:    make build
4️⃣  Deploy:   make deploy

┌─────────────────────────────────────────────────────────────────────────────┐
│ ⚡ MAKEFILE COMMANDS                                                         │
└─────────────────────────────────────────────────────────────────────────────┘

make help       Show all available commands
make install    Install npm dependencies
make build      Build with Vite 7.1.2
make commit     Git commit and push to main
make deploy     Deploy to Vercel production
make all        Run complete pipeline (install→build→commit→deploy→verify)
make verify     Check if tryonyou.app returns HTTP 200
make status     Show git status
make clean      Remove build artifacts

┌─────────────────────────────────────────────────────────────────────────────┐
│ 📜 SCRIPTS                                                                   │
└─────────────────────────────────────────────────────────────────────────────┘

./deploy.sh              Run complete deployment (6 steps)
node watcher.js          Start auto-deployment daemon
./EXAMPLES.sh            Show usage examples

┌─────────────────────────────────────────────────────────────────────────────┐
│ 📝 LOGGING                                                                   │
└─────────────────────────────────────────────────────────────────────────────┘

tail -f retrodeploy.log          Follow log in real-time
tail -20 retrodeploy.log         View last 20 lines
grep ERROR retrodeploy.log       Find errors
cat retrodeploy.log              View full log

┌─────────────────────────────────────────────────────────────────────────────┐
│ 📦 ZIP FILE MANAGEMENT                                                       │
└─────────────────────────────────────────────────────────────────────────────┘

Add ZIPs:    cp myfile.zip ../TRYONYOU_DEPLOY_EXPRESS_INBOX/
Format:      TRYONYOU_DEPLOY_EXPRESS_YYYYMMDD_HHMM.zip
Example:     TRYONYOU_DEPLOY_EXPRESS_20251020_0737.zip
Auto-deploy: If watcher is running, deployment starts in 30s

┌─────────────────────────────────────────────────────────────────────────────┐
│ 🤖 WATCHER DAEMON                                                            │
└─────────────────────────────────────────────────────────────────────────────┘

Start:       node watcher.js
Background:  nohup node watcher.js > watcher.out 2>&1 &
Stop:        Ctrl+C (foreground) or kill <PID> (background)
Check:       ps aux | grep watcher

┌─────────────────────────────────────────────────────────────────────────────┐
│ 🔑 ENVIRONMENT VARIABLES                                                     │
└─────────────────────────────────────────────────────────────────────────────┘

Required for deployment:
  VERCEL_TOKEN              Vercel authentication token
  
Required for notifications:
  TELEGRAM_BOT_TOKEN        Telegram bot token
  TELEGRAM_CHAT_ID          Telegram chat ID

Optional:
  VERCEL_PROJECT_ID         Vercel project ID
  VERCEL_TEAM_ID            Vercel team ID
  AUTO_DEPLOY               Enable auto-deployment (default: true)
  WATCH_INTERVAL            Watcher interval in ms (default: 30000)

┌─────────────────────────────────────────────────────────────────────────────┐
│ 🔧 DEPLOYMENT STEPS                                                          │
└─────────────────────────────────────────────────────────────────────────────┘

1️⃣  Detect ZIPs          Count files in INBOX
2️⃣  Clean Duplicates     Keep newest, remove older
3️⃣  Git Commit           Add, commit, push to main
4️⃣  Build                Vite 7.1.2 → dist/
5️⃣  Deploy               Vercel production
6️⃣  Verify & Notify      HTTP 200 + Telegram

┌─────────────────────────────────────────────────────────────────────────────┐
│ 🔍 TROUBLESHOOTING                                                           │
└─────────────────────────────────────────────────────────────────────────────┘

Build fails:           npm install && make build
Vercel fails:          Check VERCEL_TOKEN in .env
Git push fails:        Check GitHub credentials
Site not responding:   Wait 2-3 minutes for deployment
Watcher not working:   Check permissions on INBOX directory

┌─────────────────────────────────────────────────────────────────────────────┐
│ 📚 DOCUMENTATION                                                             │
└─────────────────────────────────────────────────────────────────────────────┘

README.txt             User instructions (detailed)
DOCUMENTATION.md       Complete technical documentation
ARCHITECTURE.txt       System architecture and data flow
EXAMPLES.sh            Usage examples
QUICK_REFERENCE.txt    This file

┌─────────────────────────────────────────────────────────────────────────────┐
│ 🌍 VERIFICATION                                                              │
└─────────────────────────────────────────────────────────────────────────────┘

Check site:        curl https://tryonyou.app
Or:                make verify
Or browser:        https://tryonyou.app

Expected:          HTTP 200 OK
Vercel dashboard:  https://vercel.com/dashboard
GitHub repo:       https://github.com/LVT-ENG/...

┌─────────────────────────────────────────────────────────────────────────────┐
│ 🔒 SECURITY NOTES                                                            │
└─────────────────────────────────────────────────────────────────────────────┘

⚠️  NEVER commit .env with real tokens to git
✅ Use .env.example as template
✅ Set permissions: chmod 600 .env
✅ Rotate tokens regularly
✅ .env is in .gitignore (automatically excluded)

┌─────────────────────────────────────────────────────────────────────────────┐
│ ⚙️  COMMON WORKFLOWS                                                         │
└─────────────────────────────────────────────────────────────────────────────┘

First-time setup:
  1. cd retrodeploy
  2. cp .env.example .env
  3. nano .env (add tokens)
  4. make install
  5. make build
  6. make deploy

Manual deployment:
  1. cd retrodeploy
  2. ./deploy.sh

Auto-deployment:
  1. cd retrodeploy
  2. node watcher.js &
  3. cp myfiles/*.zip ../TRYONYOU_DEPLOY_EXPRESS_INBOX/
  (deployment starts automatically)

Complete pipeline:
  cd retrodeploy && make all

Just build:
  cd retrodeploy && make build

Just deploy:
  cd retrodeploy && make deploy

╔═══════════════════════════════════════════════════════════════════════════════╗
║  Version: 1.0.0  │  Created: 2025-10-20  │  By: LVT-ENG                      ║
╚═══════════════════════════════════════════════════════════════════════════════╝
