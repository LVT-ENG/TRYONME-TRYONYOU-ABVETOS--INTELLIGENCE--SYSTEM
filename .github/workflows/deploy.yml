name: Deploy to Vercel

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout repo
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm install

      - name: üèóÔ∏è Build project
        run: npm run build

      - name: üöÄ Deploy to Vercel
        id: deploy
        run: |
          npx vercel --prod --token=${{ secrets.VERCEL_TOKEN }} --yes --confirm > deployment-url.txt
          echo "vercel_url=$(cat deployment-url.txt | tail -n 1)" >> $GITHUB_OUTPUT
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: üì¢ Notify Telegram
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            STATUS="‚úÖ TRYONYOU desplegado con √©xito üöÄ"
          else
            STATUS="‚ùå Error en el despliegue de TRYONYOU"
          fi
          
          MESSAGE="${STATUS}%0ARepo: ${GITHUB_REPOSITORY}%0ABranch: ${GITHUB_REF_NAME}%0AAutor: ${GITHUB_ACTOR}%0Aüîó Enlace: ${{ steps.deploy.outputs.vercel_url }}"
          
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -d text="${MESSAGE}" \
          -d parse_mode="Markdown"
